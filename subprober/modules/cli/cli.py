#!/usr/bin/env python3
import argparse
from subprober.modules.logger.logger import logger



def cli():
    
    try:
        parser =  argparse.ArgumentParser(add_help=False,usage=argparse.SUPPRESS,exit_on_error=False )
        parser.add_argument("-f", "--filename",  type=str)
        parser.add_argument("-h", "--help", action="store_true")
        parser.add_argument("-u", "--url",  type=str )
        parser.add_argument("-o", "--output", type=str)
        parser.add_argument("-c", "--concurrency", type=int, default=100)
        parser.add_argument("-tl", "--title", action="store_true")
        parser.add_argument("-to", "--timeout", type=int, default=10)
        parser.add_argument("-sv", "--server", action="store_true")
        parser.add_argument("-l", "--location", action="store_true")
        parser.add_argument("-wc", "--word-count",  action="store_true")
        parser.add_argument("-apt", "--application-type",  action="store_true")
        parser.add_argument("-fc", "--filter-code",  type=str)
        parser.add_argument("-mc", "--match-code",  type=str)
        parser.add_argument("-s", "--silent", action="store_true")
        parser.add_argument("-v", "--verbose", action="store_true")
        parser.add_argument("-p", "--path", type=str)
        parser.add_argument("-px", "--proxy", type=str)
        parser.add_argument("-ar", "--allow-redirect", action="store_true")
        parser.add_argument("-nc", "--no-color", action="store_true")
        parser.add_argument("-up", "--update", action="store_true")
        parser.add_argument("-das", "--disable-auto-save", action="store_true")
        parser.add_argument("-dhp", "--disable-http-probe", action="store_true")
        parser.add_argument("-X", "--method", type=str, choices=["get", "post", "head", "put", "delete", "patch", "trace", "connect", "options"], default="get")
        parser.add_argument("-H", "--header", action="append")
        parser.add_argument("-sc", "--status-code", action="store_true")
        parser.add_argument("-ra", "--random-agent", action="store_true")
        parser.add_argument("-ss", "--screenshot", action="store_true")
        parser.add_argument("-st", "--screenshot-timeout", type=int, default=15)
        parser.add_argument("-sp", "--screenshot-path", type=str)
        parser.add_argument("-ip", "--ipaddress", action="store_true")
        parser.add_argument("-cn", "--cname", action="store_true")
        parser.add_argument("-maxr", "--max-redirection", type=int, default=10)
        parser.add_argument("-sup", "--show-updates", action="store_true")
        parser.add_argument("-http2", "--http2", action="store_true")
        parser.add_argument("-htv", "--http-version", action="store_true")
        parser.add_argument("-hrs", "--http-reason", action="store_true")
        parser.add_argument("-jarm", "--jarm-fingerprint", action="store_true")
        parser.add_argument("-rpt", "--response-time", action="store_true")
        parser.add_argument("-sd", "--secret-debug", action="store_true") # this isn't for you!
        parser.add_argument("-rtl", "--rate-limit", type=int, default=1000)
        parser.add_argument("-d", "--delay", type=float, default=0.5)
        parser.add_argument("-lc", "--line-count", action="store_true")
        parser.add_argument("-pt", "--port", type=str)
        parser.add_argument("-rts", "--retries", type=int, default=0)
        parser.add_argument("-wss", "--websocket", action="store_true")
        parser.add_argument("-dmt", "--display-method", action="store_true")
        parser.add_argument("-J", "--json", action="store_true")
        parser.add_argument("-bp", "--body-preview", action="store_true")
        parser.add_argument("-hash", "--hash", type=str)
        parser.add_argument("-cl", "--content-length", action="store_true")
        parser.add_argument("-tls", "--tls", action="store_true")
        parser.add_argument("-scp", "--system-chrome-path", action="store_true")
        parser.add_argument("-aaa", "--aaa-records", action="store_true")
        parser.add_argument("-fcr", "--filter-code-range", type=str)
        parser.add_argument("-mcr", "--match-code-range", type=str)
        parser.add_argument("-mrt", "--match-response-time", type=float)
        parser.add_argument("-frt","--filter-response-time", type=float)
        parser.add_argument("-ms","--match-string", type=str)
        parser.add_argument("-fs","--filter-string", type=str)
        parser.add_argument("-mr","--match-regex", type=str)
        parser.add_argument("-fr","--filter-regex", type=str)
        parser.add_argument("-mpt", "--match-path", type=str)
        parser.add_argument("-fpt","--filter-path", type=str)
        parser.add_argument("-ml", "--match-length", type=str)
        parser.add_argument("-fl", "--filter-length", type=str)
        parser.add_argument("-mlc", "--match-line-count", type=str)
        parser.add_argument("-flc","--filter-line-count", type=str)
        parser.add_argument("-mwc","--match-word-count",type=str)
        parser.add_argument("-fwc","--filter-word-count",type=str)
        parser.add_argument("-rdu", "--redirect-urls", action="store_true")
        parser.add_argument("-rdh", "--redirect-history", action="store_true")
        parser.add_argument("-rsc", "--redirect-status-codes", action="store_true")
        parser.add_argument("-rqh", "--request-headers", action="store_true")
        parser.add_argument("-rsh", "--response-headers", action="store_true")
        parser.add_argument("-fo", "--full-output", action="store_true")
        parser.add_argument("-sni", "--sni-hostname", type=str)
        parser.add_argument("-HH", "--screenshot-headers", action="append")
        parser.add_argument("-pdf", "--save-pdf", action="store_true")
        parser.add_argument("-sid", "--screenshot-idle", default=1, type=int)
        parser.add_argument("-hos", "--headless-options", type=str)
        parser.add_argument("-icb", "--include-bytes", action="store_true")
        parser.add_argument("-sct", "--screenshot-threads", type=int, default=40)
        return parser.parse_args()
    except argparse.ArgumentError as e:
        print(f"Please use the command for more information: subprober -h {e}", "warn")
        exit(1)
    except argparse.ArgumentTypeError as e:
        print(f"Please use the command for more information: subprober -h {e}", "warn")
        exit(1)
    except KeyboardInterrupt as e:
        exit(1)
    except Exception as e:
        logger(f"Exception occured in the cli module due to: {e}, {type(e)}")
        exit(1)